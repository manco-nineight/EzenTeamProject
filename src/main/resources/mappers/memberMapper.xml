<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.member">
	<!-- *Mapper.xml에 Select 이용 시 resultType에 패키지명.DTO(VO)에서 패키지명을 붙이지 않고도 사용하는 방법
	예제 resultType="kr.co.domain.BoardVO"에서 resultType="BoardVO" 이렇게 간편하게 작성 가능-->
	
	<select id="stock" resultType="ProductStockVO">
		SELECT * FROM prod_stock WHERE prodName = #{prodName}
	</select>
	
	<select id="testread" resultType="ProductVO">
		SELECT * FROM product WHERE prodName = #{prodName}
	</select>
	
	<resultMap type="MemberDTO" id="MemberDTO">
		<result column="userId" property="userId"/>
	</resultMap>
	
	<resultMap type="ProductVO" id="ProductVO">
		<result column="prodName" property="prodName"/>
		<result column="prodPrice" property="prodPrice"/>
		<result column="prodThumbnail" property="prodThumbnail"/>
	</resultMap>
	
	<resultMap type="ProductStockVO" id="ProductStockVO">
		<result column="prodStockSSize" property="prodStockSSize"/>
		<result column="prodStockMSize" property="prodStockMSize"/>
		<result column="prodStockLSize" property="prodStockLSize"/>
	</resultMap>
	
	<resultMap type="CartDTO" id="CartDTO">
		<result column="cartNo" property="cartNo"/>
		<result column="userId" property="userId"/>
		<result column="prodName" property="prodName"/>
		<result column="prodSize" property="prodSize"/>
		<result column="amount" property="amount"/>
		<collection property="memberDTO" resultMap="MemberDTO"/>
		<collection property="productVO" resultMap="ProductVO"/>
		<collection property="productStockVO" resultMap="ProductStockVO"/>
	</resultMap>
	
	<select id="cartlist" resultMap="CartDTO">
		SELECT cartNo, c.userId, p.prodName, p.prodPrice, p.prodThumbnail, prodSize, amount, 
		s.prodStockSSize, s.prodStockMSize, s.prodStockLSize
		FROM member m, product p, cart c, prod_stock s
		WHERE c.userId = #{userId} AND m.userId = c.userId AND c.prodName = s.prodName AND p.prodName = c.prodName
	</select>
	
	<select id="test" resultType="ProductVO">
		SELECT * FROM product
	</select>
	
	<update id="updateFindPw">
		UPDATE member SET userPw = #{userPw} WHERE userId = #{userId} AND userEmail = #{userEmail}
	</update>
	
	<select id="findPw" resultType="MemberDTO">
		SELECT * FROM member WHERE userId = #{userId} AND userEmail = #{userEmail}
	</select>
	
	<select id="findId" resultType="MemberDTO">
		SELECT * FROM member WHERE userEmail = #{userEmail}
	</select>
	
	<select id="login" resultType="MemberDTO">
		SELECT * FROM member WHERE userId = #{userId} AND userPw = #{userPw}
	</select>
	
	<delete id="delete">
		DELETE FROM member WHERE userId = #{userId}
	</delete>
	
	<update id="update">
		UPDATE member SET userPw = #{userPw}, userName = #{userName}, userEmail = #{userEmail}, 
		userBirthday = #{userBirthday}, userAddress = #{userAddress}, userUpdatedate = SYSDATE 
		WHERE userId = #{userId}
	</update>
	
	<select id="read" resultType="MemberDTO">
		SELECT * FROM member WHERE userId = #{userId}
	</select>
	
	<sql id="search">
		<if test="selector == 'userId'.toString()">
			WHERE UPPER(userId) LIKE '%'||UPPER(#{keyword})||'%'
		</if>
		
		<if test="selector == 'userName'.toString()">
			WHERE UPPER(userName) LIKE '%'||UPPER(#{keyword})||'%'
		</if>
		
		<if test="selector == 'userEmail'.toString()">
			WHERE UPPER(userEmail) LIKE '%'||UPPER(#{keyword})||'%'
		</if>
		
		<if test="selector == 'userAddress'.toString()">
			WHERE UPPER(userAddress) LIKE '%'||UPPER(#{keyword})||'%'
		</if>
	</sql>
	
	<select id="search" resultType="MemberDTO">
		SELECT * FROM member
		<include refid="search"/>
		ORDER BY userRegdate DESC
	</select>
	
	<select id="getSearchAmount" resultType="int">
		SELECT COUNT(userId) FROM member
		<include refid="search"/>
	</select>
	
	<select id="list" resultType="MemberDTO">
		SELECT * FROM member ORDER BY userRegdate DESC
	</select>
	
	<select id="getAmount" resultType="int">
		SELECT COUNT(userId) from member
	</select>
	
	<select id="idcheck" resultType="int">
		SELECT COUNT(*) FROM member WHERE userId = #{userId}
	</select>
	
	<insert id="insert">
		INSERT INTO member (userId, userPw, userName, userEmail, userBirthday, userAddress) 
		VALUES (#{userId}, #{userPw}, #{userName}, #{userEmail}, #{userBirthday}, #{userAddress})
	</insert>
	
</mapper>